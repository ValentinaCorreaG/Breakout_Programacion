plataforma_colores = (0, 0, 0)
plataforma_outline = (100, 100, 100)

class Plataforma():
    def __init__(self):
        self.alto = 20
        self.ancho = int(screen_gro / cols)
        self.x = int((screen_gro / 2) - (self.gro / 2))
        self.y = screen_alto - (self.alto * 2)
        self.velocidad = 10
        self.rec = Rec(self.x, self.y, self.ancho, self.alto)
        self.direc = 0


    def mover_plataforma(self):
        self.direc = 0
        key = pygame.key.get_pressed()
        if key[pygame.K_LEFT] and self.rec.izq > 0:
            self.rec.x -= self.velocidad
            self.direc = -1
        if key[pygame.K_RIGHT] and self.rec.der < screen_width:
            self.rec.x += self.velocidad
            self.direc = 1

    def dibujar(self):
        pygame.draw.rec(screen, plataforma_col, self.rec)
        pygame.draw.rec(screen, plataforma_outline, self.rec, 3)
        
class Break_ball():
    def __init__(self, x, y):
        self.ball_dia = 10
        self.x = x - self.ball_dia
        self.y = y
        self.rec = rec(self.x, self.y, self.ball_dia * 2, self.ball_dia * 2)
        self.velocidad_x = 4
        self.velocidad_y = -4
        self.game_over = 0


    def mover_pelota(self):
        if self.rec.izq < 0 or self.rec.der > screen_gros:
            self.velocidad_x *= -1

    
        if self.rec.arriba < 0:
            self.velocidad_y *= -1
        if self.rec.abajo > screen_alto:
            self.game_over = -1


        self.rec.x += self.velocidad_x
        self.rec.y += self.velocidad_y

        return self.game_over
    
    def pelota(self):
        pygame.draw.circle(screen, plataforma_col, (self.rec.x + self.ball_dia, self.rec.y + self.ball_dia), self.ball_dia)
        pygame.draw.circle(screen, plataforma_outline, (self.rec.x + self.ball_dia, self.rec.y + self.ball_dia), self.ball_dia, 3)


jugador_plataforma = plataforma()

ball = break_ball(player_plataforma.x + (player_plataforma.width // 2), player_plataforma.y - player_plataforma.height)
